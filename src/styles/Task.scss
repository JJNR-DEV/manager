@mixin categoryConcluded($bgColor, $borderColor) {
  background-color: $bgColor;
  border-color: $borderColor !important;
}

.taskList {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: space-evenly;
}

.task {
  border-radius: $containerRadius;
  padding: 15px;
  margin: 10px;
  box-shadow: 0.5px 0.5px 5px 1px $colorBoxFont;
  max-width: 480px;
  text-align: left;
  position: relative;
  min-width: 275px;
  word-break: break-all;

  .Other {
    color: $otherCategory;
  }

  .Work {
    color: $workCategory;
  }

  .Food {
    color: $foodCategory;
  }

  .optionsContainer {
    position: absolute;
    right: 15px;
    box-shadow: 0.1px 0.1px 2px 1px $colorBoxFont;
    padding: 7px 10px;
    top: 35px;
    background-color: #fff;
    z-index: 5;
    font-size: 0.9em;
    font-weight: 500;
    border-radius: 2px;

    &:hover {
      background-color: $colorBoxFont;
      color: #fff;
      cursor: pointer;
    }

    span {
      display: flex;
      align-items: center;
      flex-direction: row;
      width: fit-content;

      svg {
        margin-left: 5px;
      }
    }
  }

  .categoryName {
    border-bottom: 1px solid $faded !important;
    padding-bottom: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: 800;

    .lastUpdate {
      color: $colorBoxFont;
      font-size: 0.7em;
      font-weight: 400;
      margin-right: 15px;
    }

    .options {
      position: absolute;
      right: 9px;
      font-size: 1.3em;

      &::after {
        content: '\2807';
      }

      &:hover {
        cursor: pointer;
      }
    }

    span {
      &:first-child {
        padding-right: 15px;
      }
    }
  }

  .nameStatus {
    display: flex;
    padding: 10px 0;

    h2 {
      margin: 0;
    }

    label {
      margin-left: 30px;
      height: fit-content;

      input {
        display: none;
      }

      .OtherConcluded {
        @include categoryConcluded($otherCategory, #fff);
      }

      .toConclude {
        @include categoryConcluded(#fff, #000);
      }

      .customCheckbox {
        width: 22px;
        height: 22px;
        border: 1px solid;
        border-radius: 15px;
        position: absolute;
        right: 15px;
        cursor: pointer;
        color: #fff;
      }

      input:checked ~ .customCheckbox::after {
        content: '\2713';
        font-size: 1rem;
        font-weight: 800;
        display: flex;
        justify-content: center;
        padding: 1px 0;
      }
    }
  }

  .taskPrice {
    display: block;
    color: $colorBoxFont;
    font-size: 0.9em;
    padding: 0 0 10px 0;
  }

  h3 {
    color: $colorBoxFont;
    text-transform: capitalize;
    text-align: center;
    margin: 0;
    padding: 0 0 10px 0;
  }

  /* Category */
  .taskType {
    border-top: 1px solid $faded;
    padding: 5px 0 10px;

    .specialInputContainer {
      padding-top: 5px;
      font-weight: $commonWeight;
    }
  }

  /* Buttons Section */
  .btnContainer {
    display: flex;
    flex-direction: row;
    padding: 20px 0 0;

    a {
      width: 100%;
    }

    button {
      border: 0px;
      font-size: 1rem;
      width: 100%;
      padding: 10px;
      color: #fff;
      border-radius: $btnRadius;
      font-weight: $commonWeight;
      cursor: pointer;
    }

    .editBtn {
      margin-right: 10px;
      background-color: $createEditBtn;

      &:hover {
        background-color: $createEditBtnHover;
      }
    }

    .taskErasure {
      margin-left: 10px;
      background-color: $deleteBtn;

      &:hover {
        background-color: $deleteBtnHover;
      }
    }
  }
}
